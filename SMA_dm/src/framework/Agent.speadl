namespace framework {
	
	component Agent[Context,Actionable]{		
		requires tick : Tick
		
		requires context : Context
		requires actionable : Actionable
		
		provides setup : SetupAgent
		provides actObservable : ActObservable = action.observable
		
		provides log : LogQueryService = logger.log
		
		part perception : Perceive[Context] {
			bind context to context
			bind memory to knowledge.memory
			bind decision to decision.decision
			bind tick to tick
			bind logger to logger.logger
		}
		
		part decision : Decide[Actionable] {
			bind memory to knowledge.memory
			bind action to action.action
			bind perception to perception.perception
			bind logger to logger.logger
		}
		
		part action : Act [Actionable]{ 
			bind env to actionable	
			bind logger to logger.logger		
		}
		
		part logger : Logger
		
		part knowledge : Knowledge
	}
	
	component Perceive[Context] {
		requires context : Context
		requires memory : IMemory
		
		requires tick : Tick
		
		provides perception : Callable
		requires decision : Callable
		
		requires logger : LoggerService
	}
	
	component Decide [Actionable]{
		requires memory : IMemory
		requires action : Actionable
		
		requires perception : Callable		
		provides decision : Callable
		
		requires logger : LoggerService	
	}
	
	component Act [Actionable]{
		requires env : Actionable
		provides action : Actionable
		
		provides observable : ActObservable
		
		requires logger : LoggerService
	}
	
	component Knowledge {
		provides memory : IMemory
	}
}

