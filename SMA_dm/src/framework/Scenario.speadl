namespace framework {

component Clock {
	provides tick : Tick
	
	provides speed : SpeedRegulation
}

component Gui[Context] {
	requires actObservable : ActObservable
	requires env : Context
	requires speed : SpeedRegulation
	
	provides actListener : ActListener
}

 ecosystem AgentJoining[Context,Actionable] {
 	requires universalTick : Tick
 	requires universalContext : Context
	requires universalActionable : Actionable
 	species JoiningEntity {
 		provides joinTick : Tick
 		provides joinContext : Context
 		provides joinActionable : Actionable
 	}	 	
 } 
 
 ecosystem Scenario [Context,Actionable,Setup]{
 	provides setup : Setup
 	provides speed : SpeedRegulation = clock.speed
 	 	 	
	part clock : Clock
	part env : Environnement[Context,Actionable]
	part gui : Gui[Context] {
		bind actObservable to observeAllAgents
		bind env to env.context
		bind speed to clock.speed
	}
	
 	species AgentSpecies(id : String) {
 		use je : rjc.JoiningEntity
 		part agent : Agent[Context,Actionable] {
 			bind tick to je.joinTick
 			bind context to je.joinContext
 			bind actionable to je.joinActionable
 		}
 		provides actObservable : ActObservable = agent.actObservable
 		provides setupAgent : SetupAgent = agent.setup
 		provides log : LogQueryService = agent.log
 	}
 	
 	part rjc : AgentJoining[Context,Actionable] {
 		bind universalTick to clock.tick
 		bind universalContext to env.context
 		bind universalActionable to env.actionable
 	}
 	
 	provides observeAllAgents : ActObservable
 }

}
